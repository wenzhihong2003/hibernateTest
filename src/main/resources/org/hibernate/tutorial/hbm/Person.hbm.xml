<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.hibernate.tutorial.hbm">
    <class name="Person">
        <id name="id">
            <generator class="native"/>
        </id>
        <version name="version" unsaved-value="null"/>
        <property name="firstName" />
        <property name="lastName" />
        <property name="man" type="yes_no"/>
        <property name="birthDay" type="timestamp" update="false" ></property>
        <property name="deleted" access="field" type="true_false" update="false"></property>

        <many-to-one name="group" class="Group" column="group_id" not-null="true"   />


    </class>

    <class name="Group" table="groups" batch-size="3">
        <id name="id">
            <generator class="native"/>
        </id>
        <property name="name"/>
        <property name="deleted" access="field" type="true_false" update="false"></property>
        <set name="persons" cascade="all" inverse="true">
            <key column="group_id"></key>
            <one-to-many class="Person"/>
        </set>

    </class>

    <query name="queryPerson" read-only="true" cache-mode="normal" comment="查询person" fetch-size="100" timeout="60" flush-mode="never" cacheable="true" >
      from Person as p left join p.group where p.id = :id and p.birthDay = :birthday and p.man = :man
    </query>
    <query name="queryPerson2" read-only="true" cache-mode="normal" comment="查询person" fetch-size="100" timeout="60" flush-mode="never" cacheable="true" >
      from Person as p inner join fetch p.group where p.id in :ids
    </query>



    <sql-query name="queryNativeQuery" comment="本地sql查询">
        <return alias="p" class="Person"/>
        <!--<return alias="g" class="Group"/>-->
        <!--select * from person p inner join groups g on p.group_id = g.id
        where p.firstName  like :name-->

        select * from person p where p.firstName like :name
    </sql-query>

    <!--
        <class name="Func">
            <id name="id">
                <generator class="native"/>
            </id>

            <property name="name"/>
            <property name="url"/>

            <many-to-one name="parentFunc" class="Func" column="parent_id"/>

            <set name="childrenFuncs" cascade="save-update" inverse="true">
                <key column="parent_id"></key>
                <one-to-many class="Func"/>
            </set>
        </class>
    -->




</hibernate-mapping>